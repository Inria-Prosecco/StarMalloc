#1 better SMT encoding
  RAM usage is too important,
  will try to provide instructions about possible workarounds:
  - zram/zswap
  - TRAMP
  [pc1 = 12G, pc2 = 16G
    current requirements for the project > 12G, 16G ok
    -> I would like to lower it < 12G, ideally < 8G
  ]
  - unsat cores wrt Steel?
  -> issue?
  -> list of projects using Steel with selectors that could be affected?

#2 [#2459] fst/snd issues

#2bis [not reproducible] Steel function returning a tuple extraction issue
  -> confirm and minimize

#3 [#2435] Steel requires precond should be usable in ensures postcond

#4 faster lax check of Steel functions
  -> discussion, unlikely

#5 pack_tree should not require inlined values
  -> minimization

#6 [#2455] when clauses

#7 working timing to check for perf regressions
  [fstar-hackery]
  fstar --profile MyModule --profile_group_by_decl --profile_component FStar MyModule.fst
  -> discussion à suivre, répondre à Nik, possibilité de profiler la RAM par fonction/fichier ?

#8 [fstar-mode \/ fstar?]
  memory leaks, fstar.exe + mode F* within emacs
  example: Impl.Trees.Rotate.fst...

solved
- #2447 - return issues (workaround: let h = get () in)
- #2369 - subcomp framing issue (workaround: add ())

